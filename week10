class Graph:
    def __init__(self, vertices):
        self.vertices = vertices
        self.adjacency_matrix = [[0] * vertices for _ in range(vertices)]

    def add_edge(self, u, v):
        self.adjacency_matrix[u][v] = 1
        self.adjacency_matrix[v][u] = 1

    def graph_col(self):
        result = [-1] * self.vertices
        result[0] = 0

        for u in range(1, self.vertices):
            used_colors = {result[v] for v in range(self.vertices) if self.adjacency_matrix[u][v] == 1}
            color = next(c for c in range(self.vertices) if c not in used_colors)
            result[u] = color

        for vertex, color in enumerate(result):
            print(f"Vertex {vertex}: Color {color}")


# Example usage
if __name__ == "__main__":
    g = Graph(5)
    g.add_edge(0, 1)
    g.add_edge(0, 2)
    g.add_edge(1, 2)
    g.add_edge(1, 3)
    g.add_edge(2, 3)
    g.add_edge(3, 4)

    g.graph_col()
